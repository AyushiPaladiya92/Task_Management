{"ast":null,"code":"export const formatDate = date => {\n  // Get the month, day, and year\n  const month = date.toLocaleString(\"en-US\", {\n    month: \"short\"\n  });\n  const day = date.getDate();\n  const year = date.getFullYear();\n  const formattedDate = `${day}-${month}-${year}`;\n  return formattedDate;\n};\nexport function dateFormatter(dateString) {\n  const inputDate = new Date(dateString);\n  if (isNaN(inputDate)) {\n    return \"Invalid Date\";\n  }\n  const year = inputDate.getFullYear();\n  const month = String(inputDate.getMonth() + 1).padStart(2, \"0\");\n  const day = String(inputDate.getDate()).padStart(2, \"0\");\n  const formattedDate = `${year}-${month}-${day}`;\n  return formattedDate;\n}\nexport function getInitials(fullName) {\n  const names = fullName.split(\" \");\n  const initials = names.slice(0, 2).map(name => name[0].toUpperCase());\n  const initialsStr = initials.join(\"\");\n  return initialsStr;\n}\nexport const PRIOTITYSTYELS = {\n  high: \"text-red-600\",\n  medium: \"text-yellow-600\",\n  low: \"text-blue-600\"\n};\nexport const TASK_TYPE = {\n  todo: \"bg-blue-600\",\n  \"in progress\": \"bg-yellow-600\",\n  completed: \"bg-green-600\"\n};\nexport const BGS = [\"bg-blue-600\", \"bg-yellow-600\", \"bg-red-600\", \"bg-green-600\"];","map":{"version":3,"names":["formatDate","date","month","toLocaleString","day","getDate","year","getFullYear","formattedDate","dateFormatter","dateString","inputDate","Date","isNaN","String","getMonth","padStart","getInitials","fullName","names","split","initials","slice","map","name","toUpperCase","initialsStr","join","PRIOTITYSTYELS","high","medium","low","TASK_TYPE","todo","completed","BGS"],"sources":["D:/taskmanager-main/client/src/utils/index.js"],"sourcesContent":["export const formatDate = (date) => {\r\n  // Get the month, day, and year\r\n  const month = date.toLocaleString(\"en-US\", { month: \"short\" });\r\n  const day = date.getDate();\r\n  const year = date.getFullYear();\r\n\r\n  const formattedDate = `${day}-${month}-${year}`;\r\n\r\n  return formattedDate;\r\n};\r\n\r\nexport function dateFormatter(dateString) {\r\n  const inputDate = new Date(dateString);\r\n\r\n  if (isNaN(inputDate)) {\r\n    return \"Invalid Date\";\r\n  }\r\n\r\n  const year = inputDate.getFullYear();\r\n  const month = String(inputDate.getMonth() + 1).padStart(2, \"0\");\r\n  const day = String(inputDate.getDate()).padStart(2, \"0\");\r\n\r\n  const formattedDate = `${year}-${month}-${day}`;\r\n  return formattedDate;\r\n}\r\n\r\nexport function getInitials(fullName) {\r\n  const names = fullName.split(\" \");\r\n\r\n  const initials = names.slice(0, 2).map((name) => name[0].toUpperCase());\r\n\r\n  const initialsStr = initials.join(\"\");\r\n\r\n  return initialsStr;\r\n}\r\n\r\nexport const PRIOTITYSTYELS = {\r\n  high: \"text-red-600\",\r\n  medium: \"text-yellow-600\",\r\n  low: \"text-blue-600\",\r\n};\r\n\r\nexport const TASK_TYPE = {\r\n  todo: \"bg-blue-600\",\r\n  \"in progress\": \"bg-yellow-600\",\r\n  completed: \"bg-green-600\",\r\n};\r\n\r\nexport const BGS = [\r\n  \"bg-blue-600\",\r\n  \"bg-yellow-600\",\r\n  \"bg-red-600\",\r\n  \"bg-green-600\",\r\n];\r\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAI,IAAK;EAClC;EACA,MAAMC,KAAK,GAAGD,IAAI,CAACE,cAAc,CAAC,OAAO,EAAE;IAAED,KAAK,EAAE;EAAQ,CAAC,CAAC;EAC9D,MAAME,GAAG,GAAGH,IAAI,CAACI,OAAO,CAAC,CAAC;EAC1B,MAAMC,IAAI,GAAGL,IAAI,CAACM,WAAW,CAAC,CAAC;EAE/B,MAAMC,aAAa,GAAG,GAAGJ,GAAG,IAAIF,KAAK,IAAII,IAAI,EAAE;EAE/C,OAAOE,aAAa;AACtB,CAAC;AAED,OAAO,SAASC,aAAaA,CAACC,UAAU,EAAE;EACxC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EAEtC,IAAIG,KAAK,CAACF,SAAS,CAAC,EAAE;IACpB,OAAO,cAAc;EACvB;EAEA,MAAML,IAAI,GAAGK,SAAS,CAACJ,WAAW,CAAC,CAAC;EACpC,MAAML,KAAK,GAAGY,MAAM,CAACH,SAAS,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC/D,MAAMZ,GAAG,GAAGU,MAAM,CAACH,SAAS,CAACN,OAAO,CAAC,CAAC,CAAC,CAACW,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAExD,MAAMR,aAAa,GAAG,GAAGF,IAAI,IAAIJ,KAAK,IAAIE,GAAG,EAAE;EAC/C,OAAOI,aAAa;AACtB;AAEA,OAAO,SAASS,WAAWA,CAACC,QAAQ,EAAE;EACpC,MAAMC,KAAK,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;EAEjC,MAAMC,QAAQ,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EAEvE,MAAMC,WAAW,GAAGL,QAAQ,CAACM,IAAI,CAAC,EAAE,CAAC;EAErC,OAAOD,WAAW;AACpB;AAEA,OAAO,MAAME,cAAc,GAAG;EAC5BC,IAAI,EAAE,cAAc;EACpBC,MAAM,EAAE,iBAAiB;EACzBC,GAAG,EAAE;AACP,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG;EACvBC,IAAI,EAAE,aAAa;EACnB,aAAa,EAAE,eAAe;EAC9BC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,GAAG,GAAG,CACjB,aAAa,EACb,eAAe,EACf,YAAY,EACZ,cAAc,CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}